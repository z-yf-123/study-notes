// 简单数据类型和复杂数据类型
//     简单数据类型是存放在栈里面里面直接开辟一个空间存放的是值
//     复杂数据类型首先在栈里面存放地址,十六进制表示,然后这个地址指向堆里面的数据

// 简单数据类型传参
//     函数的形参也可以看做是一个变量，当我们把一个值类型变量作为参数传给函数的形参时
//     其实是把变量在栈空间里的值复制了一份给形参，那么在方法内部对形参做任何修改，都
//     不会影响到的外部变量。
function fn(a) {
  a++;
  console.log(a);
}
var x = 10;
fn(x); //11
console.log(x); //10

// 复杂数据类型传参
//    函数的形参也可以看做是一个变量，当我们把引用类型变量传给形参时，其实是把变量在栈空间里
//    保存的堆地址复制给了形参，形参和实参其实保存的是同一个堆地址，所以操作的是同一个对象。
function Person(name) {
  this.name = name;
}

function foo(p) {
  console.log(p.name); //张三
  p.name = "李四";
  console.log(p.name); //李四
}
const p1 = new Person("张三");
foo(p1);
console.log(p1.name); //李四
